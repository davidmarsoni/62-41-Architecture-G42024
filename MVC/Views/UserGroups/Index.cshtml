@model IPagedList<DTO.UserGroupDTO>
@using X.PagedList;
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <form method="get" asp-action="Create" class="d-inline-block">
        <button type="submit" class="btn btn-outline-success">Create New</button>
    </form>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Users
            </th>
            <th>
                Groups
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserDisplayName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupDisplayName)
                </td>
                <td>
                    <form method="get" asp-action="Details" asp-route-id="@item.UserGroupId" class="d-inline-block">
                        <button type="submit" class="btn btn-secondary">Details</button>
                    </form>
                    <form method="get" asp-action="Delete" asp-route-id="@item.UserGroupId" class="d-inline-block">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        UlElementClasses = new[] { "pagination" }
    })
</div>
