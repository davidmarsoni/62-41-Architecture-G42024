// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(PrintOMatic_Context))]
    [Migration("20240606072622_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 10m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Balance = 10m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Balance = 10m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Balance = 10m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Balance = 10m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Balance = 10m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Balance = 10m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Balance = 10m,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("DAL.Models.Conversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Conversions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A4 Black",
                            Value = 0.05m
                        },
                        new
                        {
                            Id = 2,
                            Name = "A4 Color",
                            Value = 0.15m
                        },
                        new
                        {
                            Id = 3,
                            Name = "A3 Black",
                            Value = 0.10m
                        },
                        new
                        {
                            Id = 4,
                            Name = "A3 Color",
                            Value = 0.30m
                        });
                });

            modelBuilder.Entity("DAL.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "604-FT-F",
                            IsDeleted = false,
                            Name = "604 Full Time French"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "604-FT-D",
                            IsDeleted = false,
                            Name = "604 Full Time Deutsch"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "604-PT-F",
                            IsDeleted = false,
                            Name = "604 Part Time French"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "604-PT-D",
                            IsDeleted = false,
                            Name = "604 Part Time Deutsch"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "604-ALL",
                            IsDeleted = false,
                            Name = "604 All Students"
                        });
                });

            modelBuilder.Entity("DAL.Models.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ConversionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ConversionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Src")
                        .HasColumnType("int");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("TransactionHistory");
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "david.marsoni@students.hevs.ch",
                            FirstName = "David",
                            Gender = "Mr",
                            IsDeleted = false,
                            LastName = "Marsoni",
                            Username = "david.marsoni"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "mathias.pitteloud@students.hevs.ch",
                            FirstName = "Mathias",
                            Gender = "Mr",
                            IsDeleted = false,
                            LastName = "Pitteloud",
                            Username = "mathias.pitteloud"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "thomas.biselx@students.hevs.ch",
                            FirstName = "Thomas",
                            Gender = "Mr",
                            IsDeleted = false,
                            LastName = "Biselx",
                            Username = "thomas.biselx"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "jonathan.araujo@students.hevs.ch",
                            FirstName = "Jonathan",
                            Gender = "Mr",
                            IsDeleted = false,
                            LastName = "Araújo",
                            Username = "jonathan.araujo"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "johanna.summermatter@students.hevs.ch",
                            FirstName = "Johanna",
                            Gender = "Mss",
                            IsDeleted = false,
                            LastName = "Summermatter",
                            Username = "johanna.summermatter"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "dylan.sanderson@students.hevs.ch",
                            FirstName = "Dylan",
                            Gender = "Mr",
                            IsDeleted = false,
                            LastName = "Sanderson",
                            Username = "dylan.sanderson"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "zanya.fernandezrodriguez@students.hevs.ch",
                            FirstName = "Zanya",
                            Gender = "Mss",
                            IsDeleted = false,
                            LastName = "Fernández Rodríguez",
                            Username = "zanya.fernandezrodriguez"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Rue de la Gare 12, 1950 Sion",
                            Email = "johann.vonroten@students.hevs.ch",
                            FirstName = "Johann",
                            Gender = "Mr",
                            IsDeleted = false,
                            LastName = "Von Roten",
                            Username = "johann.vonroten"
                        });
                });

            modelBuilder.Entity("DAL.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            GroupId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            GroupId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            GroupId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            GroupId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            GroupId = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            GroupId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            GroupId = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            GroupId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            GroupId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            GroupId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            GroupId = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            GroupId = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 14,
                            GroupId = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            GroupId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            GroupId = 5,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("DAL.Models.Account", b =>
                {
                    b.HasOne("DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.TransactionHistory", b =>
                {
                    b.HasOne("DAL.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DAL.Models.UserGroup", b =>
                {
                    b.HasOne("DAL.Models.Group", "Group")
                        .WithMany("User_Groups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.User", "User")
                        .WithMany("User_Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.Group", b =>
                {
                    b.Navigation("User_Groups");
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Navigation("User_Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
